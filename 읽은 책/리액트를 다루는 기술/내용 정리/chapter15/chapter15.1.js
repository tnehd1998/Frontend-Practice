// 15.1 Context API를 사용한 전역 상태 관리 흐름 이해하기

// 리액트 어플리케이션은 컴포넌트 간에 데이터를 props로 전달하기 때문에
// 컴포넌트 여기저기서 필요한 데이터가 있을 때는 주로 최상위 컴포넌트인 App의 state에 넣어서 관리함

// 실제 리액트 프로젝트에서는 더 많은 컴포넌트를 거쳐야 할 때도 있고 다루어야 하는 데이터가 훨씬 많아질수 있으므로,
// App에서 모든 컴포넌트에 데이터를 전달하는 방식을 사용하면 유지 보수성이 낮아질 가능성이 있음

// 리덕스나 MobX 같은 상태 관리 라이브러리를 사용하여 전역 상태 관리 작업을 더 편하게 처리하곤 했음,
// 리액트 업데이트 이후 Context API가 많이 개선되었기 때문에
// 별도의 라이브러리를 사용하지 않아도 전역 상태를 손쉽게 관리할 수 있음

// 기존에는 최상위 컴포넌트에서 여러 컴포넌트를 거쳐 props로 원하는 상태와 함수를 전달했지만,
// Context API를 사용하면 Context를 만들어 단 한번에 원하는 값을 받아 와서 사용할 수 있음

// Context API에 대한 결론
// 단순한 전역 상태 관리라면 Context API로 리덕스를 대체할 수 있음
// 하지만 리덕스는 더욱 향상된 성능과 미들웨어 기능, 강력한 개발자 도구, 코드의 높은 유지 보수성을
// 제공하기 때문에 모든 상황에 대해 대체가 가능하지는 않음
