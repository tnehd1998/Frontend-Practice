// Chapter 38) 브라우저의 렌더링 과정

// 1) 요청과 응답
// 브라우저의 핵심 기능은 필요한 리소스를 서버에 요청하고 서버로부터 응답받아
// 브라우저에 시작적으로 렌더링하는 것이다

// 2) HTTP 1.1과 HTTP 2.0
// HTTP : 웹에서 브라우저와 서버가 통신하기 위한 프로토콜

// - HTTP 1.1은 리소스의 동시 전송이 불가능한 구조이므로 요청할 리소스의
// 개수에 비례하여 응답 시간도 증가하는 단점이 있다
// - HTTP 2.0은 커넥션당 여러 개의 요청과 응답 즉 다중 요청/응답이
// 가능하여 HTTP 1.1에 비해 페이지 로드 속도가 50% 정도 빠르다

// 3) HTML 파싱과 DOM 생성
// 브라우저의 렌더링 엔진은 응답받은 HTML 문서를 파싱하여 브라우저가
// 이해할 수 있는 자료구조인 DOM을 생성한다

// DOM은 HTML 문서를 파싱한 결과물이다 🔥🔥🔥

// 4) CSS 파싱과 CSSOM 생성
// CSSOM : CSS를 HTML과 동일한 파싱 과정을 거치며 생성

// 5) 렌더 트리 생성
// 렌더링 엔진은 서버로부터 응답된 HTML과 CSS를 파싱하여 각각 DOM과
// CSSOM을 생성하고 DOM과 CSSOM은 렌더링을 위해 렌더 트리로 결합된다
// 렌더 트리는 브라우저 화면에 렌더링되는 노드만으로 구성된다

// 레이아웃 계산과 페인팅을 다시 실행하는 리렌더링은 비용이 많이 드는, 즉
// 성능에 악영향을 주는 작업이라 가급적 리렌더링이 빈번하게 발생하지
// 않도록 주의할 필요가 있다 ⭐️⭐️⭐️
