// 12.11 슈퍼클래스를 위임으로 바꾸기

class List {}
class Stack extends List {}

class Stack {
  constructor() {
    this._storage = new List();
  }
}
class List {}

// 📌 배경

// 위임을 이용하면 기능 일부만 빌려올 뿐인, 서로 별개인 개념임이 명확해진다.
// 상속을 먼저 적용하고 나중에 문제가 생기면 슈퍼클래스를 위임으로 바꾸라는 의견이다.

// 📌 절차

// 1. 슈퍼클래스 객체를 참조하는 필드를 서브클래스에 만든다. 위임 참조를 새로운 슈퍼클래스 인스턴스로 초기화한다.
// 2. 슈퍼클래스의 동작 각각에 대응하는 전달 함수를 서브클래스에 만든다. 서로 관련된 함수끼리 그룹으로 묶어 진행하며,
// 그룹을 하나씩 만들 때마다 테스트한다.
// 3. 슈퍼클래스의 동작 모두가 전달 함수로 오버라이드되었다면 상속 관계를 끊는다.
