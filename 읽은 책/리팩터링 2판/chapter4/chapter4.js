// 4.1 자가 테스트 코드의 가치

// 프로그래머라면 디버깅하느라 오랜시간 동안 고생한 경험이 있다.

// 📌 모든 테스트를 완전히 자동화하고 그 결과까지 스스로 검사하게 만들자.

// 자가 테스트 코드 자체뿐 아니라 테스트를 자주 수행하는 습관도 버그를 찾는 강력한 도구가 된다.

// 테스트를 작성하기 가장 좋은 시점은 프로그래밍을 시작하기 전이다.
// 테스트를 작성하다 보면 원하는 기능을 추가하기 위해 무엇이 필요한지 고민하게 된다.
// 테스트부터 작성하는 습관을 테스트 주도 개발 (TDD)라고 한다.

// 4.3 첫 번째 테스트

// 📌 실패해야 할 상황에서는 반드시 실패하게 만들자.

// 📌 자주 테스트하라. 작성중인 코드는 최소한 몇 분 간격으로 테스트하고,
// 적어도 하루에 한 번은 전체 테스트를 돌려보자.

// 4.4 테스트 추가하기

// 📌 완벽하게 만드느라 테스트를 수행하지 못하느니,
// 불완전한 테스트라도 작성해 실행하는 게 낫다.

// 4.6 경계 조건 검사하기

// 📌 문제가 생길 가능성이 있는 경계 조건을 생각해보고 그 부분을 집중적으로 테스트하자.

// 📌 어차피 모든 버그를 잡아낼 수는 없다고 생각하여 테스트를 작성하지 않는다면 대다수의 버그를
// 잡을 수 있는 기회를 날리는 셈이다.
