// 7.2 컬렉션 캡슐화하기

class Person {
  get courses() {
    return this._courses;
  }
  set courses(aList) {
    this._courses = aList;
  }
}

class FixedPerson {
  get courses() {
    return this._courses.slice();
  }
  addCourse(aCourse) {}
  removeCourse(aCourse) {}
}

// 📌 배경

// 컬렉션을 소유한 클래스를 통해서만 원소를 변경하도록 하면 프로그램을 개선하면서 컬렉션 변경 방식도
// 원하는 대로 수정할 수 있다.

// 컬렉션 게터가 원본 컬렉션을 반환하지 않게 만들어서 클라이언트가 실수로 컬렉션을
// 바꿀 가능성을 차단하는 게 낫다.

// 📌 절차

// 1. 아직 컬렉션을 캡슐화하지 않았다면 변수 캡슐화하기부터 한다.
// 2. 컬렉션에 원소를 추가/제거하는 함수를 추가한다.
// 3. 정적 검사를 수행한다.
// 4. 컬렉션을 참조하는 부분을 모두 찾는다. 컬렉션의 변경자를 호출하는 코드가 모두 앞에서 추가한
// 추가/제거 함수를 호출하도록 수정한다. 하나씩 수정할 때마다 테스트한다.
// 5. 컬렉션 게터를 수정해서 원본 내용을 수정할 수 없는 읽기전용 프락시나 복제본을 반환하게 한다.
// 6. 테스트한다.
